<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 데이터베이스 연동을 위한 환경설정 처리(JDBC 설정) -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/javaworks?allowMultiQueries=true" />
		<property name="username" value="root" />
		<property name="password" value="1234"/>
	</bean>
		
	<!-- MyBatis Spring 연동(=모듈설정) => mapper 정보설정(주입)(선생님) -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml" />
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />	
	</bean>
	
	<!-- 가공처리된 매퍼의 정보를 주입하기위한 DAO객체의 위치 설정 -->
	<mybatis-spring:scan base-package="com.spring.javawspring.dao" />
	
	<!-- 트랜잭션 사용을 위한 bean 설정(필수) -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />	
	</bean>
	<!-- 트랜잭션이 필요한 상황에서 어노테이션을 이용해 사용하고자 할 때 추가 작성(선택) -->
	<tx:annotation-driven/>
	
	<!-- 메일서비스(SMTP)에 필요한 환경설정(gmail.com) -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="yam.h29@gmail.com" />
		<property name="password" value="shfqbfbgvsbmwuwz" />
		<!-- javaMail(google mail이용) 환경설정 -->
		<property name="javaMailProperties">
			<props>
				<!-- java에서 사용하는 프로토콜 -> smtp 사용할거야 -->
				<prop key="mail.transport.protocol">smtp</prop>
				<!-- smtp를 시작하겠다. -> 여기까지 작성하면 원래 끝남 -->
				<prop key="mail.smtp.starttls.enable">true</prop>
				<!-- 메일 보내는 동안 화면이 멈춰있음(로딩 이모티콘 추가하는 것이 좋음) -> 메일이 가는 중인지 확인 위해 debug(기본값:true) -->
				<prop key="mail.debug">true</prop>
				<!-- 최근, 보안등급 강화가 되어 아래 두줄 작성 -->
				<!-- 브라우저가 메일 보내는 데 신중하기 위해서 보안등급 어떻게 할꺼야? -> google 거 쓸거야! (for. 보안설정) -->
				<prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<!-- 보안등급(TLS) 버전 1.2 사용할거야 -->
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
			</props>
		</property>
	</bean>
	
	
</beans>
