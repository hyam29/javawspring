<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javawspring.dao.StudyDAO">
	<select id="getGuestMid" resultType="com.spring.javawspring.vo.GuestVO">
		select * from guest2 where name = #{name};
	</select>
	<select id="getGuestNames" resultType="com.spring.javawspring.vo.GuestVO">
		select * from guest2 where name like concat('%',#{name},'%');
	</select>
	<select id="getGuestPart" resultType="com.spring.javawspring.vo.GuestVO">
		select * from guest2 where ${part} like concat('%',#{name},'%');
	</select>
	<select id="getMovieReservation" resultType="com.spring.javawspring.vo.QrCodeVO">
		select * from qrCode where idx = #{idxSearch};
	</select>
	
	<!-- 선생님qr코드 -->
	<select id="qrCodeSearch" resultType="com.spring.javawspring.vo.QrCodeVO">
  	select * from qrCode where idx = #{idx};
  </select>
  
	<select id="getKakaoAddressName" resultType="com.spring.javawspring.vo.KakaoAddressVO">
  	select * from kakaoAddress where address = #{address};
  </select>
	<select id="getAddressNameList" resultType="com.spring.javawspring.vo.KakaoAddressVO">
  	select * from kakaoAddress order by address;
  </select>
	<select id="getkakaoList" resultType="com.spring.javawspring.vo.KakaoAddressVO">
  	select * from kakaoAddress;
  </select>
  
  <select id="setTransList" resultType="com.spring.javawspring.vo.TransactionVO">
  	<!-- select u1.*, u2.nickName as nickName, u2.job as job from user u1, user2 u2 where u1.mid=u2.mid order by idx desc; --> 
		select u1.*, u2.nickName as nickName, u2.job as job from user u1 join user2 u2 on u1.mid=u2.mid order by idx desc;
  </select>
  
	
	
	<insert id="setMovieReservation">
		insert into qrCode values (#{vo.idx}, #{vo.qrCode}, #{vo.bigo});
	</insert>
	
	<!-- 선생님qr코드 -->
  <insert id="setQrCreateDB">
    insert into qrCode values (#{idx}, #{qrCode}, #{bigo});
  </insert>
  
  <insert id="setKakaoAddressName">
    insert into kakaoAddress values (#{vo.address}, #{vo.latitude}, #{vo.longitude});
  </insert>
  
  <insert id="setTransInput1">
    insert into user values (default, #{vo.mid}, #{vo.name}, #{vo.age}, #{vo.address});
  </insert>
  
  <insert id="setTransInput2">
    insert into user2 values (#{vo.mid}, #{vo.nickName}, #{vo.job});
  </insert>
  
  <!-- 멀티쿼리(root-context.xml 환경설정 해야 가능) -->
  <insert id="setTransInput">
  	insert into user values (default, #{vo.mid}, #{vo.name}, #{vo.age}, #{vo.address});
    insert into user2 values (#{vo.mid}, #{vo.nickName}, #{vo.job});
  </insert>
  
  
  <delete id="setKakaoAddressDelete">
  	delete from kakaoAddress where address = #{address};
  </delete>
</mapper>

